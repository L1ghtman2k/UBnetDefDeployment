- name: Check Block
  block:
    - name: Wait for SSH to open
      wait_for:
        port: 22
        host: "{{ host }}"
        connect_timeout: 2
        sleep: 2
        timeout: 100
      when: hostvars[host]['OS'] == "Linux"
      register: SSH_Result

    - name: Wait for WINRM to open
      wait_for:
        port: 5986
        host: "{{ host }}"
        connect_timeout: 2
        sleep: 2
      when: hostvars[host]['OS'] == "Windows"
      register: WINRM_Result

  rescue:

    - name:  Power OFF VM
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
        state: poweredoff
        folder:  "{{ hostvars[host]['folder'] }}"
        name: "{{ 'Team%02d-'|format(hostvars[host]['team_number']) }}{{ name }}"
      delegate_to: localhost

    - name:  Remove Bad VM
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
        datacenter: "{{ datacenter }}"
        datastore: "{{ datastore }}"
        state: absent
        folder:  "{{ hostvars[host]['folder'] }}"
        template: "{{ hostvars[host]['template'] }}"
        name: "{{ 'Team%02d-'|format(hostvars[host]['team_number']) }}{{ name }}"
        cluster: "{{ cluster }}"
      delegate_to: localhost
    - pause:
        minutes: 1


    - name:  Clone a virtual machine from {{ name }} template
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
        datacenter: "{{ datacenter }}"
        datastore: "{{ datastore }}"
        state: poweredon
        folder:  "{{ hostvars[host]['folder'] }}"
        template: "{{ hostvars[host]['template'] }}"
        name: "{{ 'Team%02d-'|format(hostvars[host]['team_number']) }}{{ name }}"
        cluster: "{{ cluster }}"
      delegate_to: localhost

    - pause:
        minutes: 1

    - name:  Power OFF VM
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
        state: poweredoff
        folder:  "{{ hostvars[host]['folder'] }}"
        name: "{{ 'Team%02d-'|format(hostvars[host]['team_number']) }}{{ name }}"
      delegate_to: localhost

    - name:  Customize {{ host }}
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter: "{{ datacenter }}"
        datastore: "{{ datastore }}"
        cluster: "{{ cluster }}"
        validate_certs: no
        state: present
        folder:  "{{ hostvars[host]['folder'] }}"
        name: "{{ 'Team%02d-'|format(hostvars[host]['team_number']) }}{{ name }}"
        networks: "{{ hostvars[host]['networks'] }}"
        customization: "{{ hostvars[host]['customization'] }}"
      delegate_to: localhost

    - name:  Power ON VM
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
        state: poweredon
        folder:  "{{ hostvars[host]['folder'] }}"
        name: "{{ 'Team%02d-'|format(hostvars[host]['team_number']) }}{{ name }}"
      delegate_to: localhost

    - name: Connect all Nics
      connect_nic:
        vcenter_ip: "{{ vcenter_hostname }}"
        vcenter_password: "{{ vcenter_password }}"
        vcenter_user: "{{ vcenter_username }}"
        vm_name: "{{ 'Team%02d-'|format(hostvars[host]['team_number']) }}{{ name }}"

    - pause:
        minutes: 5
      when: hostvars[host]['OS'] == "Windows"

    - pause:
        minutes: 1
      when: hostvars[host]['OS'] == "Linux"

    - name:  Nested check
      include_tasks: nested_checker.yaml